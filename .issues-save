#!/bin/bash

# Create issues directory if it doesn't exist
mkdir -p .issue-logs

# Set output file with timestamp
OUTPUT_FILE=".issue-logs/issues-$(date +%Y%m%d-%H%M%S).txt"

# Run the issues command and save to file
echo -e "\033[1;36m📋 BTC-TOOLING PROJECT ISSUES\033[0m\n" | tee "$OUTPUT_FILE"

# Get issues as JSON and format with jq, include all issues
gh issue list --json number,title,labels,state,assignees --limit 100 --state all | jq -r '.[] | "\(.number)|\(.title)|\(.labels[0].name // "unlabeled")|\(.state)|\(.assignees[0].login // "unassigned")"' | sort -n | while IFS='|' read -r num title label state assignee; do
  # Set icons and colors based on state and labels
  if [[ "$state" == "CLOSED" ]]; then
    icon="✅"
    color="\033[0;32m" # green
  elif [[ "$label" == *"bug"* ]]; then
    icon="🐛"
    color="\033[0;31m" # red
  elif [[ "$label" == *"feature"* ]]; then
    icon="🚀" 
    color="\033[0;36m" # cyan
  elif [[ "$label" == *"enhancement"* ]]; then
    icon="⭐"
    color="\033[0;33m" # yellow
  else
    icon="📌"
    color="\033[0;37m" # white
  fi
  
  # Print formatted issue with number first
  printf "${color}#%-3s %s %s %s\033[0m\n" "$num" "$icon" "$title" "[$label]" | tee -a "$OUTPUT_FILE"
done

echo -e "\nIssues saved to $OUTPUT_FILE"